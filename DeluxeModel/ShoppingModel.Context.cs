//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeluxeModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DeluxeShoppingEntities : DbContext
    {
        public DeluxeShoppingEntities()
            : base("name=DeluxeShoppingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<order_details> order_details { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<shopping_cart> shopping_cart { get; set; }
        public virtual DbSet<Supplier_Details> Supplier_Details { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<user> users { get; set; }
    
        public virtual int insertbrand(string brndname)
        {
            var brndnameParameter = brndname != null ?
                new ObjectParameter("brndname", brndname) :
                new ObjectParameter("brndname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertbrand", brndnameParameter);
        }
    
        public virtual int insertcategory(string catname)
        {
            var catnameParameter = catname != null ?
                new ObjectParameter("catname", catname) :
                new ObjectParameter("catname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertcategory", catnameParameter);
        }
    
        public virtual int insertsupplier(string companyname, string companycontact, string companymail, string companylocation)
        {
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var companycontactParameter = companycontact != null ?
                new ObjectParameter("companycontact", companycontact) :
                new ObjectParameter("companycontact", typeof(string));
    
            var companymailParameter = companymail != null ?
                new ObjectParameter("companymail", companymail) :
                new ObjectParameter("companymail", typeof(string));
    
            var companylocationParameter = companylocation != null ?
                new ObjectParameter("companylocation", companylocation) :
                new ObjectParameter("companylocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertsupplier", companynameParameter, companycontactParameter, companymailParameter, companylocationParameter);
        }
    }
}
